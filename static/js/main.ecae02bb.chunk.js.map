{"version":3,"sources":["components/pictures/defaultImage.jpg","components/MovieComponent.js","components/pictures/loader.gif","components/SingleMovie.js","components/Movie.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["MovieComponent","alt","Title","Type","Poster","getimdbID","imdbID","className","to","src","defaultImages","onClick","localStorage","setItem","SingleMovie","Plot","Genre","Actors","Writer","Awards","Director","Released","Year","Production","BoxOffice","loader","Movie","searchResult","useState","testApi","setTestApi","movieId","setMovieId","movieDetails","setMovieDetails","useEffect","fetch","then","res","json","data","Search","catch","error","console","log","getItem","path","exact","length","map","item","id","style","color","handleOnSubmit","onChange","inputVal","onSubmit","type","value","App","setInputVal","search","setSearch","e","preventDefault","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecae02bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/defaultImage.8935cb1c.jpg\";","import defaultImages from './pictures/defaultImage.jpg'\r\nimport { Link } from 'react-router-dom'\r\n\r\n const MovieComponent = ({ alt, Title, Type, Poster, getimdbID, imdbID})=>{\r\n     const handleOnclick = ()=>{\r\n        localStorage.setItem('id', imdbID)\r\n        return getimdbID(imdbID)\r\n     }\r\n  return (\r\n      \r\n        <div className='movie-box'>\r\n            <Link to={`/${Title}`}>\r\n            <div className='inner-movie-box'>\r\n           <img src={Poster === 'N/A'? defaultImages: Poster} alt={alt} onClick={()=>handleOnclick()}/>\r\n           </div>\r\n           </Link>\r\n           <div className='movie-box-bottom'>\r\n           <h4>{Title}</h4>\r\n           <span>{Type}</span>\r\n           </div> \r\n        </div>\r\n    )\r\n}\r\nexport default MovieComponent;","export default __webpack_public_path__ + \"static/media/loader.94421214.gif\";","\r\nimport { Link } from 'react-router-dom'\r\nimport defaultImages from './pictures/defaultImage.jpg'\r\nimport loader from './pictures/loader.gif'\r\n\r\nfunction SingleMovie({Poster, Plot, Title, Genre, Actors, Writer, Awards, Director, Released, Year, Production, BoxOffice, Type}) { \r\n  \r\n    return (\r\n      <>\r\n      \r\n      <div className='single-movie-detail-container'>\r\n      \r\n        <div className='movie-detail-inner-container'>\r\n        \r\n       <div className='detail-image'>\r\n       {(Poster !== 'N/A')?<img src={(Poster)?Poster:loader} alt='loading'/>:<img src={defaultImages} alt='default'/>}\r\n       </div>\r\n       <div className='details'>\r\n         <p><span>Title:</span> {Title}</p>\r\n       {(Plot!=='N/A')?<p><span>Plot: </span>{Plot}</p>:<p>Plot unavailable for this movie</p>}\r\n          <p><span>Genre: </span> {Genre}</p>\r\n          <p><span>Actors: </span> {Actors}</p>\r\n          <p><span>Writer: </span> {Writer}</p>\r\n          <p><span>Director: </span> {Director}</p>\r\n          <p><span>Year: </span> {Year}</p>\r\n          <p><span>Released: </span> {Released}</p>\r\n          <p><span>Production: </span> {Production}</p>\r\n          <p><span>Awards: </span> {Awards}</p>\r\n          <p><span>BoxOffice: </span> {BoxOffice}</p>\r\n          <p><span>Type: </span> {Type}</p>\r\n       </div>\r\n    \r\n      </div>\r\n      <Link to='/' ><button className='go-back-button'>&#8592;  go back</button></Link>\r\n      </div>\r\n      \r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default SingleMovie;\r\n  ","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport React, { useEffect ,useState } from \"react\";\r\nimport MovieComponent from './MovieComponent';\r\nimport SingleMovie from './SingleMovie'\r\nimport loader from './pictures/loader.gif'\r\n\r\n\r\n const Movie = ({searchResult})=>{\r\n    const [testApi, setTestApi] = useState([]);\r\n    const [movieId, setMovieId] = useState('');\r\n    const [movieDetails, setMovieDetails] = useState({});\r\n    const featureApi = 'https://www.omdbapi.com/?s=aaa&apikey=e7e87ea4'\r\n    useEffect( ()=>{\r\n        fetch(featureApi)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setTestApi(data.Search);\r\n        }).catch(error => console.log(error));\r\n       }\r\n      \r\n    , [])\r\n\r\n        useEffect(()=>{\r\n            if(searchResult !== [])\r\n            {setTestApi(searchResult)}\r\n\r\n        } ,[searchResult])\r\n        \r\n        useEffect( ()=>{\r\n        if(movieId!=='')\r\n        {fetch(`https://www.omdbapi.com/?i=${movieId}&apikey=e7e87ea4`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          setMovieDetails(data);\r\n        }).catch(error => console.log(error));  \r\n      }\r\n      return function cleanup(){\r\n        setMovieDetails({})\r\n      }\r\n      }, [movieId])\r\n     useEffect(()=>\r\n     localStorage.getItem('id') && setMovieId(localStorage.getItem('id'))\r\n     , [movieId])\r\n  return (\r\n      \r\n         <Router>\r\n        <Switch>\r\n        <Route path='/' exact>\r\n        <div className='movie-container'>\r\n        {(testApi)? (testApi.length > 0 ? testApi.map(item => <MovieComponent key={item.imdbID}   alt={item.Title} {...item} \r\n        getimdbID={(id)=> setMovieId(id)}/>):<img src={loader} alt='loading'/>):<h1 style={{color:'white'}}>No movie with such title</h1>} \r\n        </div>\r\n        </Route>\r\n        <Route path='/:Title'>\r\n        <SingleMovie {...movieDetails}/> \r\n        </Route>\r\n        </Switch>\r\n        </Router> \r\n    )\r\n}\r\nexport default Movie;","\r\n\r\nfunction Search({handleOnSubmit, onChange, inputVal}) { \r\n  return (\r\n    <div className='inputForm'>\r\n      <form onSubmit={handleOnSubmit}>\r\n          <input type='search' value={inputVal} \r\n          onChange={onChange}/>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import Movie from './components/Movie';\nimport Search from './components/Search';\nimport React, {useState } from \"react\";\n\nimport './App.css';\n\n\nfunction App() {\n \n  const [inputVal, setInputVal] = useState('');\n  const [ search, setSearch] = useState([]);\n \n  const setInputChange = (e)=>{\n    setInputVal(e.target.value);\n    \n}\nconst handleOnSubmit = (e)=>{\n   e.preventDefault();\n    if(inputVal){ \n      fetch(`https://www.omdbapi.com/?s=${inputVal}&apikey=e7e87ea4`)\n        .then(res => res.json())\n        .then(data => {\n          setSearch(data.Search);\n        }).catch(error => console.log(error));\n    }\n    setInputVal('');\n}\n  return (\n    \n    <div className=\"App\">\n      <header> \n        <Search handleOnSubmit={handleOnSubmit} onChange={setInputChange} inputVal={inputVal}/> \n      </header>\n      <h2 className='movie-zone'>Movie zone</h2>\n      <Movie searchResult={search}/>\n      </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}